openapi: 3.0.0
info:
  title: PETSHOP
  description: openAPI for final project
  contact:
    name: Kelompok 3
    url: "-"
  license:
    name: APACHE 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  version: 1.0.0
servers:
- url: "{{baseUrl}}/api"
  description: Mock Server
security:
- BearerToken: []
tags:
- name: Users Activity
  description: Operation to __User Activity__
- name: Authentication
  description: Operation to __register__ and __login__
- name: Member | Profile
  description: Operation in profile __member__
- name: Member | Address
  description: Operation in profile __member__
- name: Member | Cart
  description: Operation into  __cart__
- name: Member | Orders
  description: Operations to make __transactions__
- name: Admin | Profile
  description: Operation in profile __admin__
- name: Admin | Address
  description: Operation in profile __admin__
- name: Admin | Product
  description: Operation about  __product__
- name: Admin | Supplies
  description: Operation about  __supplies product__
- name: Admin | Tags
  description: Operation about  __tags__
- name: Admin | Adopt
  description: Operations about __adopt__
- name: Admin | Category
  description: Operations about __categories__
paths:
  /v1/auth/register:
    post:
      tags:
      - Authentication
      summary: Endpoint for register user
      description: Used by users to register in order to access endpoints that require
        access rights
      operationId: v1AuthRegisterPOST
      responses:
        "201":
          description: Success Register
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/profiles'
              examples:
                MEMBER:
                  description: Success create user login
                  value:
                    id: 1
                    user_id: "1"
                    email: user1@gmail.com
                    role_id: 2
                ADMIN:
                  description: Success create user login
                  value:
                    id: 2
                    user_id: "2"
                    email: admin@gmail.com
                    role_id: 1
        "400":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      security: []
      x-swagger-router-controller: Authentication
  /v1/auth/check-role:
    post:
      tags:
      - Authentication
      summary: Endpoint for check role admin
      description: Used to check admin access rights
      operationId: v1AuthCheck_rolePOST
      parameters:
      - name: x-access-token
        in: header
        description: access_token
        required: true
        style: simple
        explode: false
        schema:
          required:
          - x-access-token
          type: string
          properties:
            x-access-token:
              type: string
              example: tokenrahasia
      responses:
        "200":
          description: Success check
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
              example:
                status: OK
                data:
                  message: SUCCESS
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      security: []
      x-swagger-router-controller: Authentication
  /v1/user:
    get:
      tags:
      - Member | Profile
      summary: Endpoint for get biodata
      description: Used by the user to view the user's bio
      operationId: v1UserGET
      parameters:
      - name: Authorization
        in: header
        description: member access
        required: true
        style: simple
        explode: false
        schema:
          required:
          - Authorization
          type: string
          properties:
            Authorization:
              type: string
              example: tokenrahasia
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/profiles'
              example:
                status: OK
                data:
                  email: user1@gmail.com
                  phone: "081234567899"
                  address_id: 1
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "404":
          description: page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      security: []
      x-swagger-router-controller: MemberProfile
    put:
      tags:
      - Member | Profile
      summary: Endpoint for update biodata
      description: Used by the user to update the user's bio
      operationId: v1UserPUT
      parameters:
      - name: Authorization
        in: header
        description: member access
        required: true
        style: simple
        explode: false
        schema:
          required:
          - Authorization
          type: string
          properties:
            Authorization:
              type: string
              example: tokenrahasia
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/profiles'
            example:
              phone: "081234567899"
              address_id: 2
        required: false
      responses:
        "201":
          description: Success updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/profiles'
              example:
                status: OK
                data:
                  id: 1
                  phone: "081234567899"
                  address_id: 2
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "404":
          description: page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      security: []
      x-swagger-router-controller: MemberProfile
  /v1/user/cart:
    get:
      tags:
      - Member | Cart
      summary: Endpoint for view carts
      description: Used by the user to view items that have been added to the cart
      operationId: v1UserCartGET
      parameters:
      - name: Authorization
        in: header
        description: member access
        required: true
        style: simple
        explode: false
        schema:
          required:
          - Authorization
          type: string
          properties:
            Authorization:
              type: string
              example: tokenrahasia
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/shopping_carts'
              example:
                status: OK
                data:
                - user_id: 1
                  product_id: 1
                  qty: 3
                - user_id: 1
                  product_id: 2
                  qty: 1
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "404":
          description: page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      security: []
      x-swagger-router-controller: MemberCart
    post:
      tags:
      - Member | Cart
      summary: Endpoint to add product into the cart
      description: Used by user to add items to cart
      operationId: v1UserCartPOST
      parameters:
      - name: Authorization
        in: header
        description: member access
        required: true
        style: simple
        explode: false
        schema:
          required:
          - Authorization
          type: string
          properties:
            Authorization:
              type: string
              example: tokenrahasia
      requestBody:
        description: Add product into cart
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shopping_carts'
            example:
              product_id: 1
              qty: 3
      responses:
        "201":
          description: Add product into cart
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/shopping_carts'
              example:
                id: 1
                user_id: 1
                product_id: 1
                qty: 3
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "404":
          description: Page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      security: []
      x-swagger-router-controller: MemberCart
  /v1/user/cart/{cartId}:
    put:
      tags:
      - Member | Cart
      summary: Endpoint to edit qty product
      description: Used by the user to edit qty order products
      operationId: v1UserCartCartIdPUT
      parameters:
      - name: Authorization
        in: header
        description: member access
        required: true
        style: simple
        explode: false
        schema:
          required:
          - Authorization
          type: string
          properties:
            Authorization:
              type: string
              example: tokenrahasia
      - name: cartId
        in: path
        description: get cartId
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      requestBody:
        description: Update qty product into cart
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shopping_carts'
            example:
              qty: 5
      responses:
        "201":
          description: Success Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/shopping_carts'
              example:
                status: OK
                data:
                  user_id: 1
                  product_id: 1
                  qty: 5
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "404":
          description: page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      security: []
      x-swagger-router-controller: MemberCart
    delete:
      tags:
      - Member | Cart
      summary: Endpoint for delete product in carts
      description: Used by the user to delete items in the cart
      operationId: v1UserCartCartIdDELETE
      parameters:
      - name: Authorization
        in: header
        description: member access
        required: true
        style: simple
        explode: false
        schema:
          required:
          - Authorization
          type: string
          properties:
            Authorization:
              type: string
              example: tokenrahasia
      - name: cartId
        in: path
        description: get cartId
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      responses:
        "200":
          description: Success deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleted'
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "404":
          description: page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      security: []
      x-swagger-router-controller: MemberCart
  /v1/user/address:
    get:
      tags:
      - Member | Address
      summary: Endpoint to view addresses
      description: Used by the user to view all addresses that have been added
      operationId: v1UserAddressGET
      parameters:
      - name: Authorization
        in: header
        description: member access
        required: true
        style: simple
        explode: false
        schema:
          required:
          - Authorization
          type: string
          properties:
            Authorization:
              type: string
              example: tokenrahasia
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addresses'
              example:
                status: OK
                date:
                - id: 1
                  user_id: 2
                  name: jkw
                  phone: "081230901923"
                  province: Jawa Tengah
                  city: Solo
                  postal_code: "57722"
                  address: kotabumi rt01/02
                  province_code: "33"
                  city_code: "2333"
                - id: 2
                  user_id: 2
                  name: jkw
                  phone: "081230902222"
                  province: Jawa Tengah
                  city: Solo
                  postal_code: "57722"
                  address: kotabumi
                  province_code: "33"
                  city_code: "2333"
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "404":
          description: Page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      security: []
      x-swagger-router-controller: MemberAddress
    post:
      tags:
      - Member | Address
      summary: Endpoint for add address
      description: Used by user to add address
      operationId: v1UserAddressPOST
      parameters:
      - name: Authorization
        in: header
        description: member access
        required: true
        style: simple
        explode: false
        schema:
          required:
          - Authorization
          type: string
          properties:
            Authorization:
              type: string
              example: tokenrahasia
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addresses'
            examples:
              ADDRESS 1:
                description: Success add address 1
                value:
                  name: saitama
                  phone: "081230901923"
                  province: Jawa Tengah
                  city: Solo
                  postal_code: "57722"
                  address: kotabumi
                  province_code: "33"
                  city_code: "2313"
              ADDRESS 2:
                description: Success add address 2
                value:
                  name: jkw
                  phone: "081230908721"
                  province: Jawa Tengah
                  city: Solo
                  postal_code: "57722"
                  address: slo
                  province_code: "33"
                  city_code: "3012"
        required: true
      responses:
        "201":
          description: Success add address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addresses'
              examples:
                ADDRESS 1:
                  description: Success add address 1
                  value:
                    id: 1
                    user_id: 1
                    name: saitama
                    phone: "081230901923"
                    province: Jawa Tengah
                    city: Solo
                    postal_code: "57722"
                    address: kotabumi
                    province_code: "33"
                    city_code: "2313"
                ADDRESS 2:
                  description: Success add address 2
                  value:
                    id: 2
                    user_id: 1
                    name: jkw
                    phone: "081230908721"
                    province: Jawa Tengah
                    city: Solo
                    postal_code: "57722"
                    address: slo
                    province_code: "33"
                    city_code: "3012"
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "404":
          description: page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      security: []
      x-swagger-router-controller: MemberAddress
  /v1/user/address/{addressId}:
    put:
      tags:
      - Member | Address
      summary: Endpoint for updated address
      description: Used by users to view details of addresses that have been added
      operationId: v1UserAddressAddressIdPUT
      parameters:
      - name: Authorization
        in: header
        description: member access
        required: true
        style: simple
        explode: false
        schema:
          required:
          - Authorization
          type: string
          properties:
            Authorization:
              type: string
              example: tokenrahasia
      - name: addressId
        in: path
        description: get addressId
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: "1"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addresses'
            examples:
              ADDRESS 1:
                description: Success updated address 1
                value:
                  name: saitamahaha
                  phone: "081230901999"
                  province: Jawa Tengah
                  city: Solo
                  postal_code: "57722"
                  address: kotabumi
                  province_code: "33"
                  city_code: "310230"
              ADDRESS 2:
                description: Success updated address 2
                value:
                  name: jkw
                  phone: "081230908722"
                  province: Jawa Tengah
                  city_district: Solo
                  postal_code: "57722"
                  address: slo
                  province_code: "33"
                  city_code: "12132"
        required: false
      responses:
        "201":
          description: Success updated address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addresses'
              examples:
                ADDRESS 1:
                  description: Success updated address 1
                  value:
                    id: 1
                    user_id: 1
                    name: saitamahaha
                    phone: "081230901999"
                    province: Jawa Tengah
                    city: Solo
                    postal_code: "57722"
                    address: kotabumi
                    province_code: "33"
                    city_code: "310230"
                ADDRESS 2:
                  description: Success updated address 2
                  value:
                    id: 2
                    user_id: 1
                    name: jkw
                    phone: "081230908722"
                    province: Jawa Tengah
                    city_district: Solo
                    postal_code: "57722"
                    address: slo
                    province_code: "33"
                    city_code: "12132"
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "404":
          description: page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      security: []
      x-swagger-router-controller: MemberAddress
    delete:
      tags:
      - Member | Address
      summary: Endpoint to delete address
      description: Used by a user to delete an address
      operationId: v1UserAddressAddressIdDELETE
      parameters:
      - name: addressId
        in: path
        description: get addressId
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: "1"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleted'
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "404":
          description: Page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      security: []
      x-swagger-router-controller: MemberAddress
  /admin/v1:
    get:
      tags:
      - Admin | Profile
      summary: Endpoint for get biodata by Id
      description: Used by admin to view biodata
      operationId: adminV1GET
      responses:
        "200":
          description: Success updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/profiles'
              example:
                status: OK
                data:
                  email: user1@gmail.com
                  phone: "081234567899"
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "404":
          description: page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      x-swagger-router-controller: AdminProfile
    put:
      tags:
      - Admin | Profile
      summary: Endpoint for edit biodata
      description: Used by admin to update biodata
      operationId: adminV1PUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/profiles'
            example:
              password: abrakadabrahompimpa
              phone: "081234567899"
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/profiles'
              example:
                status: OK
                data:
                  password: abrakadabrahompimpa
                  phone: "081234567899"
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "404":
          description: page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      x-swagger-router-controller: AdminProfile
  /admin/v1/address:
    get:
      tags:
      - Admin | Address
      summary: Endpoint to view addresses
      description: Used by admin to see all addresses that have been added
      operationId: adminV1AddressGET
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/about'
              example:
                status: OK
                data:
                  id: 1
                  user_id: 1
                  name: abcdpetshop
                  description: "jl.raya lt.2, depan rumah pak jkw"
                  province: Jawa Tengah
                  city: Solo
                  postal_code: "57722"
                  province_code: "33"
                  city_code: "2333"
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "404":
          description: Page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      x-swagger-router-controller: AdminAddress
    post:
      tags:
      - Admin | Address
      summary: Endpoint for add address
      description: Used by admin to add an address
      operationId: adminV1AddressPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/about'
            example:
              name: abcdpetshop
              description: "jl.raya lt.2, depan rumah pak jkw"
              province: Jawa Tengah
              city: Solo
              postal_code: "57722"
              province_code: "33"
              city_code: "2333"
        required: true
      responses:
        "201":
          description: Success add address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/about'
              example:
                status: OK
                data:
                  id: 1
                  user_id: 1
                  name: abcdpetshop
                  description: "jl.raya lt.2, depan rumah pak jkw"
                  province: Jawa Tengah
                  city: Solo
                  postal_code: "57722"
                  province_code: "33"
                  city_code: "2333"
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "404":
          description: page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      x-swagger-router-controller: AdminAddress
  /admin/v1/address/{addressId}:
    put:
      tags:
      - Admin | Address
      summary: Endpoint for updated address
      description: Used by admins to update an address
      operationId: adminV1AddressAddressIdPUT
      parameters:
      - name: addressId
        in: path
        description: get addressId
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: "1"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/about'
            example:
              name: abcdpetshop
              description: "jl.raya lt.2, depan rumah pak jkw"
              province: Jawa Tengah
              city: Solo
              postal_code: "57722"
              province_code: "33"
              city_code: "2333"
        required: false
      responses:
        "201":
          description: Success updated address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/about'
              example:
                status: OK
                data:
                  id: 1
                  user_id: 1
                  name: abcdpetshop
                  description: "jl.raya lt.2, depan rumah pak jkw"
                  province: Jawa Tengah
                  city: Solo
                  postal_code: "57722"
                  province_code: "33"
                  city_code: "2333"
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "404":
          description: page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      x-swagger-router-controller: AdminAddress
    delete:
      tags:
      - Admin | Address
      summary: Endpoint to delete address
      description: Used by admin to delete an address
      operationId: adminV1AddressAddressIdDELETE
      parameters:
      - name: addressId
        in: path
        description: get addressId
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: "1"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleted'
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "404":
          description: Page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      x-swagger-router-controller: AdminAddress
  /admin/v1/products:
    get:
      tags:
      - Admin | Product
      summary: Endpoint for get products
      description: Used by admins to see all products that have been added
      operationId: adminV1ProductsGET
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product_tags'
              example:
                status: OK
                data:
                  count: 6
                  product:
                  - id: 1
                    product:
                      id: 1
                      name: kandang kucing
                      description: warna merah
                      weight: 2
                      qty: 4
                      price: 122121212
                      sold: 4
                      img: KHkaljhksjBKAJBS.jpeg
                    tag_id:
                    - id: 1
                      name: Kandang
                    - id: 6
                      name: Wadah
                  - id: 2
                    product:
                      id: 2
                      name: tas kucing
                      description: warna merah
                      weight: 1
                      qty: 4
                      price: 122121212
                      sold: 1
                      img: KHkaljhksjBKAJBS.jpeg
                    tag_id:
                    - id: 2
                      name: Tas
                    - id: 7
                      name: Tas Gendong
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "404":
          description: page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      x-swagger-router-controller: AdminProduct
    post:
      tags:
      - Admin | Product
      summary: Endpoint for add new products
      description: Used by admin to add an item
      operationId: adminV1ProductsPOST
      requestBody:
        description: Add new product
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/products'
            example:
              name: kandang kucing
              description: warna merah
              weight: 2
              qty: 5
              price: 122121212
              img: KHkaljhksjBKAJBS.jpeg
              tag_id:
              - 1
              - 2
              - 3
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product_tags'
              example:
                status: OK
                data:
                  id: 1
                  product:
                    id: 1
                    name: kandang kucing
                    description: warna merah
                    weight: 2
                    qty: 5
                    price: 122121212
                    img: KHkaljhksjBKAJBS.jpeg
                  tag_id:
                  - id: 1
                    name: Kandang
                  - id: 2
                    name: Kandang Kucing
                  - id: 3
                    name: Wadah
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "404":
          description: page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      x-swagger-router-controller: AdminProduct
  /admin/v1/products/{productId}:
    get:
      tags:
      - Admin | Product
      summary: Endpoint to get Products by Id
      description: Used by admin to view a products by Id product
      operationId: adminV1ProductsProductIdGET
      parameters:
      - name: productId
        in: path
        description: get productId
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: "1"
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product_tags'
              example:
                status: OK
                data:
                  id: 1
                  product:
                    id: 1
                    name: kandang kucing
                    description: warna merah
                    weight: 2
                    qty: 4
                    price: 122121212
                    sold: 4
                    img: KHkaljhksjBKAJBS.jpeg
                  tag_id:
                  - id: 1
                    name: Kandang
                  - id: 6
                    name: Wadah
      x-swagger-router-controller: AdminProduct
    put:
      tags:
      - Admin | Product
      summary: Endpoint for update product
      description: Used by admin to update an item
      operationId: adminV1ProductsProductIdPUT
      parameters:
      - name: productId
        in: path
        description: get productId
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: "1"
      requestBody:
        description: update new product
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/products'
            example:
              name: kadang kucing bonus kalung
              description: warna merah
              weight: 2
              qty: 5
              price: 122121212
              img: KHkaljhksjBKAJBS.jpeg
              tag_id:
              - 1
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product_tags'
              example:
                status: OK
                data:
                  id: 1
                  product:
                    id: 1
                    name: kandang kucing bonus kalung
                    description: warna merah
                    weight: 2
                    qty: 5
                    price: 122121212
                    img: KHkaljhksjBKAJBS.jpeg
                  tag_id:
                  - id: 1
                    name: Kandang
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "404":
          description: page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      x-swagger-router-controller: AdminProduct
    delete:
      tags:
      - Admin | Product
      summary: Endpoint for delete product
      description: Used by admin to delete an item
      operationId: adminV1ProductsProductIdDELETE
      parameters:
      - name: productId
        in: path
        description: get productId
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: "1"
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleted'
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "404":
          description: page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      x-swagger-router-controller: AdminProduct
  /admin/v1/supplies:
    get:
      tags:
      - Admin | Supplies
      summary: Endpoint to get all supplies
      description: Used by admin to view all supplies products
      operationId: adminV1SuppliesGET
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/supplies'
              example:
                status: OK
                data:
                  count: 20
                  supplies:
                  - id: 1
                    product:
                      id: 1
                      name: kandang kucing
                      description: warna merah
                      weight: 2
                      qty: 4
                      price: 122121212
                      sold: 4
                      img: KHkaljhksjBKAJBS.jpeg
                    qty: 10
                    date: 10-11-2022
                  - id: 2
                    product:
                      id: 2
                      name: kandang semut
                      description: warna merah
                      weight: 10
                      qty: 2
                      price: 122121212
                      sold: 4
                      img: KHkaljhksjBKAJBS.jpeg
                    qty: 110
                    date: 10-11-2022
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "404":
          description: page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      x-swagger-router-controller: AdminSupplies
    post:
      tags:
      - Admin | Supplies
      summary: Endpoint to add supplies product
      description: Used by admin to add new supplies products
      operationId: adminV1SuppliesPOST
      requestBody:
        description: add new supplies
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/supplies'
            example:
              product_id: 1
              qty: 20
      responses:
        "201":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/supplies'
              example:
                status: OK
                data:
                  id: 1
                  product:
                    id: 1
                    name: kandang kucing
                    description: warna merah
                    weight: 2
                    qty: 4
                    price: 122121212
                    sold: 4
                    img: KHkaljhksjBKAJBS.jpeg
                  qty: 20
                  date: 22-12-2022
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "404":
          description: page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      x-swagger-router-controller: AdminSupplies
  /admin/v1/supplies/{suppliesId}:
    get:
      tags:
      - Admin | Supplies
      summary: Endpoint to get Supplies product by Id
      description: Used by admin to view supplies product by Id
      operationId: adminV1SuppliesSuppliesIdGET
      parameters:
      - name: suppliesId
        in: path
        description: get suppliesId
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: "1"
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/supplies'
              example:
                status: OK
                data:
                  id: 1
                  product:
                    id: 1
                    name: kandang kucing
                    description: warna merah
                    weight: 2
                    qty: 4
                    price: 122121212
                    sold: 4
                    img: KHkaljhksjBKAJBS.jpeg
                  qty: 10
                  date: 22-12-2022
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "404":
          description: page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      x-swagger-router-controller: AdminSupplies
    put:
      tags:
      - Admin | Supplies
      summary: Endpoint to edit supplies products
      description: Used by admin to update supplies products
      operationId: adminV1SuppliesSuppliesIdPUT
      parameters:
      - name: suppliesId
        in: path
        description: get suppliesId
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: "1"
      requestBody:
        description: Update supplies
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/supplies'
            example:
              product_id: 1
              qty: 10
      responses:
        "201":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/supplies'
              example:
                status: OK
                data:
                  id: 1
                  product:
                    id: 1
                    name: kandang kucing
                    description: warna merah
                    weight: 2
                    qty: 4
                    price: 122121212
                    sold: 4
                    img: KHkaljhksjBKAJBS.jpeg
                  qty: 10
                  date: 22-12-2022
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "404":
          description: page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      x-swagger-router-controller: AdminSupplies
    delete:
      tags:
      - Admin | Supplies
      summary: Endpoint for delete supplies
      description: Used by admin to delete an item supplies
      operationId: adminV1SuppliesSuppliesIdDELETE
      parameters:
      - name: suppliesId
        in: path
        description: get suppliesId
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: "1"
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleted'
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "404":
          description: page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      x-swagger-router-controller: AdminSupplies
  /admin/v1/tags:
    get:
      tags:
      - Admin | Tags
      summary: Endpoint for get tags
      description: Used by admin to view tags
      operationId: adminV1TagsGET
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tags'
              example:
                status: OK
                data:
                  count: 6
                  tags:
                  - id: 1
                    name: Kandang
                  - id: 2
                    name: Tas
                  - id: 3
                    name: Pasir
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      x-swagger-router-controller: AdminTags
    post:
      tags:
      - Admin | Tags
      summary: Endpoint for add new tags
      description: Used by admin to create new tags
      operationId: adminV1TagsPOST
      requestBody:
        description: Create new tags
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tags'
            example:
              name: Kandang
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tags'
              example:
                status: OK
                data:
                  id: 1
                  name: Kandang
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "404":
          description: page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      x-swagger-router-controller: AdminTags
  /admin/v1/tags/{tagsId}:
    delete:
      tags:
      - Admin | Tags
      summary: Endpoint for delete tags
      description: Used by admin to delete an item tags
      operationId: adminV1TagsTagsIdDELETE
      parameters:
      - name: tagsId
        in: path
        description: get tagsId
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleted'
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "404":
          description: page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      x-swagger-router-controller: AdminTags
  /admin/v1/adopt:
    get:
      tags:
      - Admin | Adopt
      summary: Endpoint for get all adopt
      description: Used by admins to see all adoptions that have been added
      operationId: adminV1AdoptGET
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/animal_adoptions'
              example:
                status: OK
                data:
                  count: 6
                  adopt:
                  - id: 1
                    name: kucing oren
                    img: kucing.jpeg
                    age: 20
                    animal_race: anggora
                    category:
                      id: 1
                      name: Kucing
                  - id: 2
                    name: kucing gareng
                    img: kucing.jpeg
                    age: 20
                    animal_race: anggora
                    category:
                      id: 1
                      name: Kucing
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "404":
          description: page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      x-swagger-router-controller: AdminAdopt
    post:
      tags:
      - Admin | Adopt
      summary: Endpoint for add new animal adopt
      description: Used by admin to add new adoption
      operationId: adminV1AdoptPOST
      requestBody:
        description: Add new product
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/animal_adoptions'
            example:
              name: kucing oren
              img: kucing.jpeg
              age: 20
              animal_race: anggora
              categoryId: 1
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/animal_adoptions'
              example:
                status: OK
                data:
                  id: 1
                  name: kucing oren
                  img: kucing.jpeg
                  age: 20
                  animal_race: anggora
                  category:
                    id: 1
                    name: Kucing
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "404":
          description: page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      x-swagger-router-controller: AdminAdopt
  /admin/v1/adopt/{adoptId}:
    get:
      tags:
      - Admin | Adopt
      summary: Endpoint to get animal adopts by Id
      description: Used by admin to view animal adoption by Id
      operationId: adminV1AdoptAdoptIdGET
      parameters:
      - name: adoptId
        in: path
        description: get adoptId
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: "1"
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/animal_adoptions'
              example:
                status: OK
                data:
                  id: 1
                  name: kucing oren
                  img: kucing.jpeg
                  age: 20
                  animal_race: anggora
                  category:
                    id: 1
                    name: Kucing
      x-swagger-router-controller: AdminAdopt
    put:
      tags:
      - Admin | Adopt
      summary: Endpoint for update animal adopt
      description: Used by admins to update adopted animals
      operationId: adminV1AdoptAdoptIdPUT
      parameters:
      - name: adoptId
        in: path
        description: get adoptId
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: "1"
      requestBody:
        description: update new adopt
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/animal_adoptions'
            example:
              name: kucing oyen
              img: kucing.jpeg
              age: 20
              animal_race: anggora
              category_id: 1
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/animal_adoptions'
              example:
                status: OK
                data:
                  id: 1
                  name: kucing oyen
                  img: kucing.jpeg
                  age: 20
                  animal_race: anggora
                  category_id: 1
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "404":
          description: page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      x-swagger-router-controller: AdminAdopt
    delete:
      tags:
      - Admin | Adopt
      summary: Endpoint for delete animal adopt
      description: Used by admins to remove adopted animalsUsed by admins to remove
        adopted animals
      operationId: adminV1AdoptAdoptIdDELETE
      parameters:
      - name: adoptId
        in: path
        description: get adoptId
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: "1"
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleted'
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "404":
          description: page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      x-swagger-router-controller: AdminAdopt
  /admin/v1/category:
    get:
      tags:
      - Admin | Category
      summary: Endpoint for get categories
      description: Used by admin to view categories
      operationId: adminV1CategoryGET
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/categories'
              example:
                status: OK
                data:
                  count: 6
                  category:
                  - id: 1
                    name: Kucing
                  - id: 2
                    name: Kadal
                  - id: 3
                    name: Buaya
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      x-swagger-router-controller: AdminCategory
    post:
      tags:
      - Admin | Category
      summary: Endpoint for add new categories
      description: Used by admin to create new categories
      operationId: adminV1CategoryPOST
      requestBody:
        description: Create new category
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/categories'
            example:
              name: Kadal
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/categories'
              example:
                status: OK
                data:
                  id: 1
                  name: Kadal
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "404":
          description: page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      x-swagger-router-controller: AdminCategory
  /admin/v1/category/{categoryId}:
    put:
      tags:
      - Admin | Category
      summary: Endpoint to update a categories
      description: Used by admin to update categories
      operationId: adminV1CategoryCategoryIdPUT
      parameters:
      - name: categoryId
        in: path
        description: get categoryId
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Update a categories
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/categories'
            example:
              name: Kucing Anggora
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/categories'
              example:
                status: OK
                data:
                  id: 1
                  name: Kucing Anggora
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "404":
          description: page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      x-swagger-router-controller: AdminCategory
    delete:
      tags:
      - Admin | Category
      summary: Endpoint for delete categories
      description: Used by admin to delete an item categories
      operationId: adminV1CategoryCategoryIdDELETE
      parameters:
      - name: categoryId
        in: path
        description: get categoryId
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleted'
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "404":
          description: page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      x-swagger-router-controller: AdminCategory
  /v1/user/orders:
    get:
      tags:
      - Member | Orders
      summary: Endpoint get all orders
      description: Used by users to view all item transactions
      operationId: v1UserOrdersGET
      parameters:
      - name: Authorization
        in: header
        description: member access
        required: true
        style: simple
        explode: false
        schema:
          required:
          - Authorization
          type: string
          properties:
            Authorization:
              type: string
              example: tokenrahasia
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/order_products'
              example:
                status: OK
                data:
                - id: 1
                  product:
                    id: 1
                    name: kandang burung
                    description: murah bangettt
                    qty: 5
                    price: 122121212
                    img: KHkaljhksjBKAJBS.jpeg
                  order_id: 1
                  qty: 3
                  sub_weight: 2
                  sub_total: "30.000"
                - id: 2
                  product:
                    id: 2
                    name: kandang jangkrik
                    description: oren gembul
                    qty: 3
                    price: 1111111
                    img: KHkaljhksjBKAJBS.jpeg
                  order_id: 2
                  qty: 3
                  sub_weight: 1
                  sub_total: "50.000"
        "404":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      security: []
      x-swagger-router-controller: MemberOrders
    post:
      tags:
      - Member | Orders
      summary: Endpoint get all user orders
      description: Used by users to add orders
      operationId: v1UserOrdersPOST
      parameters:
      - name: Authorization
        in: header
        description: member access
        required: true
        style: simple
        explode: false
        schema:
          required:
          - Authorization
          type: string
          properties:
            Authorization:
              type: string
              example: tokenrahasia
      requestBody:
        description: Add new order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order_products'
            example:
              product_id: 1
              qty: 3
              sub_weight: 3
              sub_total: "30.000"
      responses:
        "201":
          description: Success get all orders
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/order_products'
              example:
                status: OK
                data:
                  id: 1
                  product_id: 1
                  order_id: 1
                  qty: 3
                  sub_weight: 3
                  sub_total: "30.000"
        "401":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        "403":
          description: Fail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        "404":
          description: page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        "500":
          description: Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      security: []
      x-swagger-router-controller: MemberOrders
  /products:
    get:
      tags:
      - Users Activity
      summary: Endpoint for get all products
      description: Used by all users to view products
      operationId: productsGET
      parameters:
      - name: min_price
        in: query
        description: price filters
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: "0"
      - name: max_price
        in: query
        description: price filters
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: title
        in: query
        description: title filters
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tags
        in: query
        description: tags filters
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product_tags'
              examples:
                PRODUCTS:
                  description: get products data
                  value:
                    status: OK
                    data:
                      count: 6
                      products:
                      - id: 1
                        product:
                          id: 1
                          name: kandang burung
                          description: murah bangettt
                          weight: 1
                          qty: 5
                          price: 122121212
                          img: KHkaljhksjBKAJBS.jpeg
                          sold: 0
                        tag_id:
                        - id: 1
                          name: Kandang
                      - id: 2
                        product:
                          id: 2
                          name: kandang jangkrik
                          description: tahan panas
                          weight: 1
                          qty: 3
                          price: 1111111
                          img: KHkaljhksjBKAJBS.jpeg
                          sold: 0
                        tag_id:
                        - id: 1
                          name: Kandang
                      - id: 3
                        product:
                          id: 3
                          name: kandang buaya
                          description: tahan banting
                          weight: 1
                          price: 222222222
                          qty: 3
                          img: KHkaljhksjBKAJBS.jpeg
                          sold: 0
                        tag_id:
                        - id: 1
                          name: Kandang
                MIN_PRICE:
                  description: Get data products by min_price example 100000
                  value:
                    status: OK
                    data:
                      count: 6
                      products:
                      - id: 1
                        product:
                          id: 1
                          name: kandang burung
                          description: murah bangettt
                          weight: 1
                          qty: 5
                          price: 200000
                          img: KHkaljhksjBKAJBS.jpeg
                          sold: 0
                        tag_id:
                        - id: 1
                          name: Kandang
                      - id: 2
                        product:
                          id: 2
                          name: kandang jangkrik
                          description: tahan panas
                          weight: 1
                          qty: 3
                          price: 300000
                          img: KHkaljhksjBKAJBS.jpeg
                          sold: 0
                        tag_id:
                        - id: 1
                          name: Kandang
                      - id: 3
                        product:
                          id: 3
                          name: kandang buaya
                          description: tahan banting
                          weight: 1
                          price: 150000
                          qty: 3
                          img: KHkaljhksjBKAJBS.jpeg
                          sold: 0
                        tag_id:
                        - id: 1
                          name: Kandang
                MAX_PRICE:
                  description: Get data product by max_price example 100000
                  value:
                    status: OK
                    data:
                      count: 6
                      products:
                      - id: 1
                        product:
                          id: 1
                          name: kandang burung
                          description: murah bangettt
                          weight: 1
                          qty: 5
                          price: 30000
                          img: KHkaljhksjBKAJBS.jpeg
                          sold: 0
                        tag_id:
                        - id: 1
                          name: Kandang
                      - id: 2
                        product:
                          id: 2
                          name: kandang jangkrik
                          description: tahan panas
                          weight: 1
                          qty: 3
                          price: 99000
                          img: KHkaljhksjBKAJBS.jpeg
                          sold: 0
                        tag_id:
                        - id: 1
                          name: Kandang
                      - id: 3
                        product:
                          id: 3
                          name: kandang buaya
                          description: tahan banting
                          weight: 1
                          price: 80000
                          qty: 3
                          img: KHkaljhksjBKAJBS.jpeg
                          sold: 0
                        tag_id:
                        - id: 1
                          name: Kandang
                TITLE:
                  description: Get data product by title example Pasir
                  value:
                    status: OK
                    data:
                      count: 6
                      products:
                      - id: 1
                        product:
                          id: 1
                          name: Pasir Pantai original
                          description: barang dijamin ori
                          weight: 1
                          qty: 5
                          price: 1000000
                          img: KHkaljhksjBKAJBS.jpeg
                          sold: 0
                        tag_id:
                        - id: 1
                          name: Pasir
                      - id: 2
                        product:
                          id: 5
                          name: Pasir lereng gunung Merapi
                          description: barang original
                          weight: 1
                          qty: 3
                          price: 99000
                          img: KHkaljhksjBKAJBS.jpeg
                          sold: 0
                        tag_id:
                        - id: 1
                          name: Pasir
                TAGS:
                  description: Get data product by Tags example kandang
                  value:
                    status: OK
                    data:
                      count: 6
                      products:
                      - id: 1
                        product:
                          id: 1
                          name: kandang burung
                          description: murah bangettt
                          weight: 1
                          qty: 5
                          price: 30000
                          img: KHkaljhksjBKAJBS.jpeg
                          sold: 0
                        tag_id:
                        - id: 1
                          name: kandang
                      - id: 2
                        product:
                          id: 2
                          name: kandang jangkrik
                          description: tahan panas
                          weight: 1
                          qty: 3
                          price: 200000
                          img: KHkaljhksjBKAJBS.jpeg
                          sold: 0
                        tag_id:
                        - id: 1
                          name: kandang
                      - id: 3
                        product:
                          id: 3
                          name: kandang buaya
                          description: tahan banting
                          weight: 1
                          qty: 3
                          price: 80000
                          img: KHkaljhksjBKAJBS.jpeg
                          sold: 0
                        tag_id:
                        - id: 1
                          name: kandang
      security: []
      x-swagger-router-controller: UsersActivity
  /products/{productId}:
    get:
      tags:
      - Users Activity
      summary: Endpoint to get product by Id
      description: Used by all users to view details of a product
      operationId: productsProductIdGET
      parameters:
      - name: productId
        in: path
        description: get productId
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: "1"
      responses:
        "200":
          description: Success get product by Id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
              example:
                status: OK
                data:
                  id: 1
                  name: kandang burung
                  description: murah bangettt
                  weight: 1
                  qty: 5
                  price: 122121212
                  img: KHkaljhksjBKAJBS.jpeg
                  sold: 3
        "404":
          description: page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
      security: []
      x-swagger-router-controller: UsersActivity
  /tags:
    get:
      tags:
      - Users Activity
      summary: Endpoint to view tags
      description: Used by all users to view details of a Used by all users to view
        a tags
      operationId: tagsGET
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tags'
              example:
                status: OK
                data:
                  count: 6
                  tags:
                  - id: 1
                    name: Tas
                  - id: 2
                    name: Pasir
                  - id: 3
                    name: Kandang
      security: []
      x-swagger-router-controller: UsersActivity
  /adopts:
    get:
      tags:
      - Users Activity
      summary: Endpoint for get all animal adopt
      description: Used by all users to view all adopted animal
      operationId: adoptsGET
      parameters:
      - name: title
        in: query
        description: title filters
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: category
        in: query
        description: category filters
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
              examples:
                TITLE:
                  description: Get data product by title example Kucing
                  value:
                    status: OK
                    data:
                      count: 6
                      adopts:
                      - id: 1
                        name: Kucing Persia
                        description: warna oren
                        qty: 5
                        price: 1000000
                        img: KHkaljhksjBKAJBS.jpeg
                        category:
                          id: 1
                          name: Kucing
                      - id: 5
                        name: Kucing Anggora X Hima
                        description: warna abu-abu
                        qty: 3
                        price: 2000000
                        img: KHkaljhksjBKAJBS.jpeg
                        category:
                          id: 1
                          name: Kucing
                CATEGORIES:
                  description: Get data product by Tags example Anggora
                  value:
                    status: OK
                    data:
                      count: 6
                      adopts:
                      - id: 1
                        name: kucing anggora
                        description: murah bangettt
                        qty: 5
                        price: 30000
                        img: KHkaljhksjBKAJBS.jpeg
                        category:
                          id: 1
                          name: Anggora
                      - id: 2
                        name: kucing bulu tebal
                        description: oren gembul
                        qty: 3
                        price: 200000
                        img: KHkaljhksjBKAJBS.jpeg
                        category:
                          id: 1
                          name: Anggora
      security: []
      x-swagger-router-controller: UsersActivity
  /adopts/{adoptId}:
    get:
      tags:
      - Users Activity
      summary: Endpoint to get animal adopt by Id
      description: Used by all users to view details of a Used by all users to view
        details of an adopted animal
      operationId: adoptsAdoptIdGET
      parameters:
      - name: adoptId
        in: path
        description: get adoptId
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: "1"
      responses:
        "200":
          description: Success get product by Id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
              example:
                status: OK
                data:
                  id: 1
                  name: kucing oren
                  img: kucing.jpeg
                  age: 20
                  animal_race: anggora
                  category:
                    id: 1
                    name: Kucing
        "404":
          description: page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
      security: []
      x-swagger-router-controller: UsersActivity
  /categories:
    get:
      tags:
      - Users Activity
      summary: Endpoint to view categories
      description: Used by all users to view details of a Used by all users to view
        a categories
      operationId: categoriesGET
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/categories'
              example:
                status: OK
                data:
                  count: 6
                  categories:
                  - id: 1
                    name: Kucing
                  - id: 2
                    name: Kadal
                  - id: 3
                    name: Buaya
      security: []
      x-swagger-router-controller: UsersActivity
components:
  schemas:
    "400":
      type: object
      properties:
        status:
          type: string
          example: FAIL
        data:
          $ref: '#/components/schemas/400_data'
    "401":
      type: object
      properties:
        status:
          type: string
          example: FAIL
        data:
          $ref: '#/components/schemas/401_data'
    "403":
      type: object
      properties:
        status:
          type: string
          example: FAIL
        data:
          $ref: '#/components/schemas/403_data'
    "404":
      type: object
      properties:
        status:
          type: string
          example: OK
        data:
          $ref: '#/components/schemas/404_data'
    "500":
      type: object
      properties:
        status:
          type: string
          example: ERROR
        data:
          $ref: '#/components/schemas/500_data'
    profiles:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
        access_token:
          type: string
        refresh_token:
          type: string
        role_id:
          $ref: '#/components/schemas/roles'
      example:
        access_token: access_token
        refresh_token: refresh_token
        password: password
        user_id: user_id
        phone: phone
        role_id:
          name: name
          id: 6
        id: 0
        email: email
    roles:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
      example:
        name: name
        id: 6
    addresses:
      type: object
      properties:
        id:
          type: integer
        user_id:
          $ref: '#/components/schemas/profiles'
        name:
          type: string
        phone:
          type: string
        province:
          type: string
        city:
          type: string
        postal_code:
          type: string
        address:
          type: string
        province_code:
          type: string
        city_code:
          type: string
      example:
        address: address
        province: province
        user_id:
          access_token: access_token
          refresh_token: refresh_token
          password: password
          user_id: user_id
          phone: phone
          role_id:
            name: name
            id: 6
          id: 0
          email: email
        phone: phone
        city: city
        name: name
        city_code: city_code
        id: 0
        postal_code: postal_code
        province_code: province_code
    about:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        province:
          type: string
        city:
          type: string
        postal_code:
          type: string
        province_code:
          type: string
        city_code:
          type: string
      example:
        province: province
        city: city
        name: name
        description: description
        city_code: city_code
        id: 0
        postal_code: postal_code
        province_code: province_code
    products:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        weight:
          type: string
        qty:
          type: integer
        price:
          type: string
        sold:
          type: integer
        img:
          type: string
      example:
        sold: 5
        img: img
        price: price
        qty: 1
        name: name
        description: description
        weight: weight
        id: 6
    supplies:
      type: object
      properties:
        id:
          type: integer
        product_id:
          $ref: '#/components/schemas/products'
        qty:
          type: integer
        date:
          type: string
      example:
        date: date
        product_id:
          sold: 5
          img: img
          price: price
          qty: 1
          name: name
          description: description
          weight: weight
          id: 6
        qty: 6
        id: 0
    orders:
      type: object
      properties:
        id:
          type: integer
        user_id:
          $ref: '#/components/schemas/profiles'
        address_id:
          $ref: '#/components/schemas/addresses'
        midtrans_id:
          type: string
        snap_token:
          type: string
        shipping_cost:
          type: string
        grand_weight:
          type: string
        grand_total:
          type: string
        date:
          type: string
        status:
          type: string
      example:
        snap_token: snap_token
        date: date
        user_id:
          access_token: access_token
          refresh_token: refresh_token
          password: password
          user_id: user_id
          phone: phone
          role_id:
            name: name
            id: 6
          id: 0
          email: email
        shipping_cost: shipping_cost
        address_id:
          address: address
          province: province
          user_id:
            access_token: access_token
            refresh_token: refresh_token
            password: password
            user_id: user_id
            phone: phone
            role_id:
              name: name
              id: 6
            id: 0
            email: email
          phone: phone
          city: city
          name: name
          city_code: city_code
          id: 0
          postal_code: postal_code
          province_code: province_code
        grand_weight: grand_weight
        midtrans_id: midtrans_id
        id: 0
        grand_total: grand_total
        status: status
    order_products:
      type: array
      items:
        $ref: '#/components/schemas/order_products_inner'
    tags:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
      example:
        name: name
        id: 6
    product_tags:
      type: object
      properties:
        id:
          type: integer
        product_id:
          $ref: '#/components/schemas/products'
        tag_id:
          $ref: '#/components/schemas/tags'
      example:
        product_id:
          sold: 5
          img: img
          price: price
          qty: 1
          name: name
          description: description
          weight: weight
          id: 6
        tag_id:
          name: name
          id: 6
        id: 0
    animal_adoptions:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        img:
          type: string
        age:
          type: integer
        animal_race:
          type: string
        categoryId:
          $ref: '#/components/schemas/categories'
      example:
        img: img
        name: name
        id: 0
        animal_race: animal_race
        age: 6
        categoryId:
          name: name
          id: 1
    categories:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
      example:
        name: name
        id: 1
    shopping_carts:
      type: object
      properties:
        id:
          type: integer
        user_id:
          $ref: '#/components/schemas/profiles'
        product_id:
          $ref: '#/components/schemas/products'
      example:
        user_id:
          access_token: access_token
          refresh_token: refresh_token
          password: password
          user_id: user_id
          phone: phone
          role_id:
            name: name
            id: 6
          id: 0
          email: email
        product_id:
          sold: 5
          img: img
          price: price
          qty: 1
          name: name
          description: description
          weight: weight
          id: 6
        id: 0
    deleted:
      type: object
      properties:
        status:
          type: string
          example: OK
        data:
          $ref: '#/components/schemas/deleted_data'
      example:
        data:
          message: SUCCESS_DELETED!
        status: OK
    inline_response_200:
      type: object
      properties:
        status:
          type: string
        data:
          $ref: '#/components/schemas/inline_response_200_data'
      example:
        data:
          message: message
        status: status
    inline_response_200_1:
      type: object
      properties:
        status:
          type: string
        data:
          type: object
      example:
        data: {}
        status: status
    inline_response_200_2:
      type: object
      properties:
        status:
          type: string
        data:
          $ref: '#/components/schemas/animal_adoptions'
      example:
        data:
          img: img
          name: name
          id: 0
          animal_race: animal_race
          age: 6
          categoryId:
            name: name
            id: 1
        status: status
    "400_data":
      type: object
      properties:
        message:
          type: string
          example: BAD_REQUEST!
    "401_data":
      type: object
      properties:
        message:
          type: string
          example: UNAUTHORIZED!
    "403_data":
      type: object
      properties:
        message:
          type: string
          example: FORBIDDEN!
    "404_data":
      type: object
      properties:
        message:
          type: string
          example: PAGE_NOT_FOUND!
    "500_data":
      type: object
      properties:
        message:
          type: string
          example: INTERNAL_SERVER_ERROR!
    order_products_inner:
      type: object
      properties:
        product_id:
          $ref: '#/components/schemas/products'
        order_id:
          $ref: '#/components/schemas/orders'
        qty:
          type: integer
        sub_weight:
          type: integer
        sub_total:
          type: string
      example:
        product_id:
          sold: 5
          img: img
          price: price
          qty: 1
          name: name
          description: description
          weight: weight
          id: 6
        qty: 6
        sub_total: sub_total
        order_id:
          snap_token: snap_token
          date: date
          user_id:
            access_token: access_token
            refresh_token: refresh_token
            password: password
            user_id: user_id
            phone: phone
            role_id:
              name: name
              id: 6
            id: 0
            email: email
          shipping_cost: shipping_cost
          address_id:
            address: address
            province: province
            user_id:
              access_token: access_token
              refresh_token: refresh_token
              password: password
              user_id: user_id
              phone: phone
              role_id:
                name: name
                id: 6
              id: 0
              email: email
            phone: phone
            city: city
            name: name
            city_code: city_code
            id: 0
            postal_code: postal_code
            province_code: province_code
          grand_weight: grand_weight
          midtrans_id: midtrans_id
          id: 0
          grand_total: grand_total
          status: status
        sub_weight: 1
    deleted_data:
      type: object
      properties:
        message:
          type: string
          example: SUCCESS_DELETED!
      example:
        message: SUCCESS_DELETED!
    inline_response_200_data:
      type: object
      properties:
        message:
          type: string
      example:
        message: message
  parameters:
    userId:
      name: id
      in: path
      description: get userId
      required: true
      style: simple
      explode: false
      schema:
        type: string
        example: "1"
    addressId:
      name: addressId
      in: path
      description: get addressId
      required: true
      style: simple
      explode: false
      schema:
        type: string
        example: "1"
    productId:
      name: productId
      in: path
      description: get productId
      required: true
      style: simple
      explode: false
      schema:
        type: string
        example: "1"
    suppliesId:
      name: suppliesId
      in: path
      description: get suppliesId
      required: true
      style: simple
      explode: false
      schema:
        type: string
        example: "1"
    tagsId:
      name: tagsId
      in: path
      description: get tagsId
      required: true
      style: simple
      explode: false
      schema:
        type: string
    categoryId:
      name: categoryId
      in: path
      description: get categoryId
      required: true
      style: simple
      explode: false
      schema:
        type: string
    adoptId:
      name: adoptId
      in: path
      description: get adoptId
      required: true
      style: simple
      explode: false
      schema:
        type: string
        example: "1"
    shopping_carts:
      name: cartId
      in: path
      description: get cartId
      required: true
      style: simple
      explode: false
      schema:
        type: string
        default: "1"
    access_token:
      name: Authorization
      in: header
      description: member access
      required: true
      style: simple
      explode: false
      schema:
        required:
        - Authorization
        type: string
        properties:
          Authorization:
            type: string
            example: tokenrahasia
  securitySchemes:
    BearerToken:
      type: http
      description: Authentication with JWT
      scheme: bearer
      bearerFormat: JWT
